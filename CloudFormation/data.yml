Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
  DBUsername:
    NoEcho: 'true'
    Description: Username for PostgresSQL database access
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: 'true'
    Description: Password PostgresSQL database access
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
Resources:
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Publically Accessible RDS
      VpcId: 
        Fn::ImportValue: 
          !Sub "${EnvironmentName}-VPC"

  DBIngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      CidrIp: 0.0.0.0/0
      GroupId: !Ref DBSecurityGroup
      SourceSecurityGroupId: !Ref DBSecurityGroup

  DBSubnetGroup: 
      Type: AWS::RDS::DBSubnetGroup
      Properties: 
          DBSubnetGroupDescription: This associates the two public subnets with the RDS DB
          SubnetIds: 
              - Fn::ImportValue:
                  !Sub "${EnvironmentName}-PUB1-SN"
              - Fn::ImportValue:
                  !Sub "${EnvironmentName}-PUB2-SN"

  PostgresDB:
      Type: AWS::RDS::DBInstance
      DependsOn: DBSubnetGroup
      Properties:
          DBName: udagramdb
          DBSubnetGroupName: !Ref DBSubnetGroup
          AllocatedStorage: '20'
          DBInstanceClass: db.t2.micro
          Engine: postgres
          PubliclyAccessible: true
          MasterUsername: 
              Ref: DBUsername
          MasterUserPassword: 
              Ref: DBPassword
          VPCSecurityGroups:
            - !Ref DBSecurityGroup
          DeletionPolicy: Snapshot


  # Access to the bucket will be with Signed URLs only
  S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
          CorsConfiguration:
              CorsRules:
              - AllowedHeaders: ['*']
                AllowedMethods: [GET, POST, PUT, DELETE, HEAD]
                AllowedOrigins: ['*']
                MaxAge: '3600'

Outputs:
  BucketName:
      Value: !Ref 'S3Bucket'
      Description: Name of the Amazon S3 bucket used to store image files.
  DBAddress:
      Value: !GetAtt [PostgresDB, Endpoint.Address]
      Description: Returns the connection endpoint for the database